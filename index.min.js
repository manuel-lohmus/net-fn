/**net-fn functions. @preserve Copyright (c) 2021 Manuel LÃµhmus.*/
function argArrMap(n){return n.map(function(n){if(typeof n=="function"){var t="fn"+count++;return callbacks[t]=n,t}return n})}function to_fnsObj(n){var t=n;return typeof n=="function"?(t={},t.anonymous=n):Array.isArray(n)&&(t=n.reduce(function(n,t){return typeof t=="function"&&(n[t.name]=t),n},{})),t}function connect(n,t,i="localhost"){var r={};return n=to_fnsObj(n),Object.keys(n).forEach(function(u){typeof n[u]=="function"&&(r[u]=function(){var r=Array.from(arguments),n=net.connect({port:t,host:i},function(){n.on("data",function(t){var i=JSON.parse(t);if(i.result)return n.end(),i.result;Array.isArray(i.argArr)&&i.argArr.forEach(function(t){typeof callbacks[t[0]]=="function"&&(t[1]=t[1].map(function(t){return typeof t=="string"&&t.startsWith("fn")?function(){var i=argArrMap(Array.from(arguments));n.write(JSON.stringify({key:t,argArr:i}))}:t}),callbacks[t[0]].apply(null,t[1]),delete callbacks[t[0]])})});r=argArrMap(r);n.write(JSON.stringify({key:u,argArr:r}));Object.keys(callbacks).length||n.end()});n.on("error",function(n){console.error("fn_connect:",n)})})}),r.anonymous?r.anonymous:r}function isPortFree(n,t,i="localhost"){var r=net.connect({port:n,host:i});r.on("error",function(){r.end();typeof t=="function"&&t(!0)});r.on("ready",function(){r.end();typeof t=="function"&&t(!1)});r.on("timeout",function(){r.end();typeof t=="function"&&t(!1)})}function createServer(n,t,i,r="localhost"){n=to_fnsObj(n);isPortFree(t,function(u){if(u){var f=net.createServer(function(t){t.on("data",function(i){var e=!1,r=JSON.parse(i),u=n[r.key],f;if(u||(u=callbacks[r.key],u&&delete callbacks[r.key]),typeof u=="function")r.argArr=r.argArr.map(function(n){return typeof n=="string"&&n.startsWith("fn")?(e=!0,function(){var i=Array.from(arguments);i=argArrMap(i,callbacks);t.write(JSON.stringify({argArr:[[n,i]]}))}):n}),f=u.apply(null,r.argArr),f?t.write(JSON.stringify({result:f})):e||t.end();else throw new Error("The '"+r.key+"' is undefined.");})}).listen(t,r,function(){console.log("'net-fn' service:",{hostname:r,port:t,file:process.argv[1],pid:process.pid})});f.on("error",function(n){console.error("fn_server",n)});typeof i=="function"&&i(f)}},r)}function tryToRunServer(n,t,i,r="localhost"){isPortFree(t,function(u){if(u)if(typeof n=="string")typeof i=="function"&&i(try_to_run(n));else{n=to_fnsObj(n);var f='"use strict";var fns = {'+Object.keys(n).reduce(function(t,i){return t+i+": "+n[i]+","},"")+"};"+(require.main.path.endsWith("net-fn")?'require("./index.js")':'require("net-fn")')+".createServer(fns, "+t+', "'+r+'");';typeof i=="function"&&i(try_to_run(f))}else require("worker_threads").parentPort.postMessage("kill")},r)}var try_to_run;"use strict";var net=require("net"),callbacks={},count=1;exports.connect=connect;exports.isPortFree=isPortFree;exports.createServer=createServer;try_to_run=require("try-to-run");exports.tryToRunServer=tryToRunServer;